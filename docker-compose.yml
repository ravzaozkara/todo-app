version: '3.8'

services:
  database:
    image: postgres:15
    container_name: todo-database
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - todo-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo-backend
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: todoapp
      DB_USER: postgres
      DB_PASSWORD: password
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src:ro
    networks:
      - todo-network

  frontend:
   build:
     context: ./frontend
     dockerfile: Dockerfile
   container_name: todo-frontend
   ports:
     - "8080:80"
   depends_on:
     backend:
       condition: service_healthy
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:80/"]
     interval: 30s
     timeout: 10s
     retries: 3
     start_period: 20s
   restart: unless-stopped
   networks:
     - todo-network

networks:
  todo-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16